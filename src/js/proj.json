[
    {
        "heading": "Library Kiosk System",
        "description": "Developed a collaborative Library Kiosk application utilizing object-oriented principles. Designed classes like Book, Library, and Date to manage the library catalog. The Kiosk interface facilitates adding, removing, checking out/in books, and displaying the library's collection.",
        "tags": [
            "Java",
            "Object-Oriented Design (OOD)",
            "Console Application Development",
            "Data Structures (Arrays)",
            "Input/Output (Scanning)"
        ],
        "completion_date": "TBD"
    },
    {
        "heading": "Two-Player Chess Game",
        "description": "Implemented a text-based Chess game for two players. The program renders the chessboard, prompts user input for moves, and enforces game rules. Key functionalities include legal moves for all pieces, castling, en passant, promotion, check detection/checkmate identification, and handling illegal moves, resignations, and draw offers.",
        "tags": [
            "Java",
            "Object-Oriented Design (OOD)",
            "Game Development",
            "Bitbucket Version Control",
            "Command Line Interface (CLI)"
        ],
        "completion_date": "Fall'24"
    },
    {
        "heading": "Payroll Processing System",
        "description": "Designed and built a Payroll Processing System to manage employee payments. Implemented classes like Employee, Fulltime, Parttime, Management, Profile, Company, PayrollProcessing, and RunProject2. The system processes console commands, handles exceptions, and offers functionalities for adding/removing employees, calculating salaries, and generating paystubs.",
        "tags": [
            "Java",
            "Object-Oriented Design (OOD)",
            "Inheritance",
            "JUnit Testing",
            "Exception Handling",
            "Console Application Development"
        ],
        "completion_date": "TBD"
    },
    {
        "heading": "Music Database Design & Querying",
        "description": "Designed and implemented a relational database for a music streaming service (similar to Spotify or Amazon Music) using SQLite and SQL. The database schema minimizes data redundancy through foreign keys and normalization, featuring tables for artists, albums, songs, users, playlists, and ratings.",
        "tags": [
            "Python",
            "SQLite Database Management",
            "SQL Database Design",
            "Database Schema Design",
            "Query Optimization"
        ],
        "completion_date": "Fall'23"
    },
    {
        "heading": "Kindergarten Classroom Simulation",
        "description": "Developed a comprehensive classroom simulation project using Singly Linked Lists, 2D arrays, and Circular Linked Lists. The simulation efficiently manages student entry, seating arrangements, and a musical chairs game. It implements fair student seating logic based on seating availability and height order, enhancing gameplay realism.",
        "tags": [
            "Java",
            "Object-Oriented Programming (OOP)",
            "Data Structures (Linked Lists, Arrays)",
            "Algorithms"
        ],
        "completion_date": "Spring'23"
    },
    {
        "heading": "Huffman Coding for Text Compression",
        "description": "Designed and implemented a highly efficient Huffman Coding algorithm in Java, achieving significant file size reduction (up to 60%). The implementation ensures data integrity throughout the compression process, showcasing expertise in algorithmic efficiency and accuracy. Graph traversal algorithms (DFS and BFS) were employed for efficient graph exploration and analysis.",
        "tags": [
            "Java",
            "Object-Oriented Programming (OOP)",
            "Algorithms (Huffman Coding, Graph Traversal)",
            "Data Structures (Trees, Arrays)"
        ],
        "completion_date": "Spring'23"
    },
    {
        "heading": "Graph Algorithm Exploration (Infinity War)",
        "description": "This project delves into advanced graph algorithms and adjacency matrix implementation to tackle complex challenges. Designed and created Java classes for seamless input/output, utilizing advanced data structures like Array Lists and HashMaps for efficient data management.",
        "tags": [
            "Java",
            "Object-Oriented Programming (OOP)",
            "Algorithms (Graph Algorithms)",
            "Data Structures (Arrays, HashMaps)"
        ],
        "completion_date": "Spring'23"
    }
]